                            ----------------------------------------- Question pytest -----------------------------------------               

====== Qu’est-ce que pytest ? ======

Le framework de test PyTest, donne l'oportunité aux utilisateurs de créer des programmes permettant de tester des script Python. 
Il est utile d'écrire des cas de test simples et évolutifs pour les bases de données, les API (interface logiciel-logiciel) ou les interfaces utilisateur. 
PyTest est surtout utilisé pour créer des tests d'API. Pytest permet d'écrire de nombreux des tests unitaires simples aux tests fonctionnels complexes
(detailler sur ce notebook). Le tests logiciels constituent une part importante de la culture du développement logiciel Python. Python etant un langage à 
typage dynamique et non statique, cela rend les tests essentiel pour eviter les erreur de typage et garanti l'exactitude du programme.


====== Quand a été créée cette bibliothèque, de quand date la dernière version (quel est le numéro de la dernière version) ? ======

La premiere pierre a l'édifice a été poser en janvier 2007. La derniere version pytest : 7.1.3, est sortie le 31-08-2022


====== Comment installer cette bibliothèque (dans un environnement conda) ? ======

Sur conda il suffit d'exécuter la commande : conda install -c anaconda pytest


====== Pourquoi tester son code ? ======

A mesure qu'un projet de developpement grandit, il devient extremement difficile de suivre tous les ajout, supression et modification faite sur ce projet,
d'autan plus quand un nombre conséquent de personne travaille dessus en meme temps. Les tests automatisés sont la seule technique qui s'est avérée efficace 
pour assurer une cohérance dans le developpement et créer des logiciels fiables. De nombreux échecs développementaux de logiciels peuvent être attribués à 
l'insuffisance ou à l'absence totale de tests. Tester son logiciel est donc esentielle si l'on souhaite se prévenir de nombreux probleme qui peuvent 
subvenir au cour du developpement et lors de sa sortie.

====== Pourquoi utiliser PyTest ? ====== NEW QUESTION

- Très facile à prendre en main grâce à sa syntaxe simple et facile.
- Peut exécuter des tests en parallèle.
- Peut exécuter un test spécifique ou un sous-ensemble de tests.
- Détection automatique des tests
- Sauter des tests
- Open source


====== Différences entre test unitaire et test d’intégration ? ======
====== Expliquer comment fonction pytest. ======
====== Expliquer ce que sont les fixtures. ======


      ----------------------------------------- Questions et points à aborder ou à traiter dans le script : -----------------------------------------

Construire des tests unitaires et d’intégration pour le script du mini-projet « Mots anglais dans le protéome humain ».


                                  ----------------------------------------- Livrables ----------------------------------------- 

- Un notebook Jupyter (tuto.ipynb).
- Un script Python (words_in_proteome.py) qui implémente le mini-projet « Mots anglais dans le protéome humain ».
- Un script Python (demo.py) qui implémente les différents tests


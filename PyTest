Pytest » Les tests avec Python
Exploration des tests en Python et découverte de la bibliothèque pytest.

Questions et points à aborder ou à traiter dans le notebook :
•	Qu’est-ce que pytest ?


Reponse

Avec l'aide du framework de test PyTest, les utilisateurs peuvent créer des programmes de test dans le langage de programmation Python. Il est utile d'écrire des cas de test simples et évolutifs pour les bases de données, les API ou les interfaces utilisateur. PyTest est surtout utilisé pour créer des tests d'API. Il est utile d'écrire des tests, des tests unitaires simples aux tests fonctionnels complexes.

Les tests logiciels constituent une part importante de la culture du développement logiciel Python. Python est un langage à typage dynamique plutôt qu'un langage à typage statique, les tests sont donc encore plus cruciaux pour garantir l'exactitude du programme.


•	Quand a été créée cette bibliothèque, de quand date la dernière version (quel est le numéro de la dernière version) ?


Reponse



•	Comment installer cette bibliothèque (dans un environnement conda) ?



Reponse



•	Pourquoi tester son code ?


Reponse

Une seule personne ou même une grande équipe ne peut pas suivre tous les changements et les relations entre les changements à mesure que la taille de la base de code du logiciel augmente. 

Une fois qu'ils ont dépassé le stade du prototype rudimentaire, les tests automatisés sont la seule technique qui s'est avérée efficace pour créer des logiciels fiables. De nombreux échecs importants dans le développement de logiciels peuvent être attribués à l'insuffisance ou à l'absence totale de tests.

• Pourquoi utiliser PyTest ? NEW QUESTION

. Très facile à prendre en main grâce à sa syntaxe simple et facile.
. Peut exécuter des tests en parallèle.
. Peut exécuter un test spécifique ou un sous-ensemble de tests.
. Détection automatique des tests
. Sauter des tests
. Source ouverte



•	Différences entre test unitaire et test d’intégration ?
•	Expliquer comment fonction pytest.
•	Expliquer ce que sont les fixtures.

Questions et points à aborder ou à traiter dans le script :
•	Construire des tests unitaires et d’intégration pour le script du mini-projet « Mots anglais dans le protéome humain ».

Contraintes : 
•	Utilisation de la bibliothèque pytest.

Livrables : 
•	Un notebook Jupyter (tuto.ipynb).
•	Un script Python (words_in_proteome.py) qui implémente le mini-projet « Mots anglais dans le protéome humain ».
•	Un script Python (demo.py) qui implémente les différents tests

Ressources :
•	vidéo : PyTest Tutorial.
•	article de blog : Testing Python Applications with Pytest.
•	script du mini-projet : « Mots anglais dans le protéome humain ».
